# Copyright 2021 DeepMind Technologies Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# modified Ruoshi Sun
# 2021-09-30

Bootstrap: docker
From: nvidia/cuda:11.0-base

%labels
maintainer rs7wz@virginia.edu
homepage https://github.com/deepmind/alphafold
description Open source code for AlphaFold
gpu true
moduleclass bio

# %files

# requirements.txt /

%post

# Install packages.
apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    cuda-command-line-tools-11-0 \
    git \
    hmmer \
    kalign \
    tzdata \
    wget \
    libcudnn8 \
    libcusolver-11-0 \
  && rm -rf /var/lib/apt/lists/*

# Complile HHsuite from source.
git clone --branch v3.3.0 https://github.com/soedinglab/hh-suite.git /tmp/hh-suite
mkdir /tmp/hh-suite/build \
  && cd /tmp/hh-suite/build
cmake -DCMAKE_INSTALL_PREFIX=/opt/hhsuite .. \
  && make -j 4 && make install \
  && ln -s /opt/hhsuite/bin/* /usr/bin \
  && rm -rf /tmp/hh-suite \
  && cd /

# Install Miniconda package manager.
wget -q -P /tmp https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
  && bash /tmp/Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda \
  && rm /tmp/Miniconda3-latest-Linux-x86_64.sh

# Conda init
#PATH="/opt/conda/bin:$PATH"
#echo /opt/conda/bin/conda shell.bash hook > /etc/profile.d/conda.sh
#chmod 644 /etc/profile.d/conda.sh
#. /etc/profile.d/conda.sh
#eval $(/opt/conda/bin/conda shell.bash hook)
. /opt/conda/etc/profile.d/conda.sh
conda activate base  

# Install conda packages.
mkdir /opt/alphafoldenv
/opt/conda/bin/conda create -y -p /opt/alphafoldenv -c conda-forge \
    python=3.8 \
    openmm=7.5.1 \
    cudatoolkit==11.0.3 \
    pdbfixer \
    pip \
    jupyterlab \
    ipykernel \
  && /opt/conda/bin/conda clean -ya



# Download alphafold.
# mkdir /app
# cd /app
# git clone https://github.com/ilyes495/alphafold.git
# # Set perms so normal users can run
# chmod a+rx /app/alphafold/run_alphafold.py

  
# Download alphafold data.
# wget -q -P /app/alphafold/common/ \
#   https://git.scicore.unibas.ch/schwede/openstructure/-/raw/7102c63615b64735c4941278d92b554ec94415f8/modules/mol/alg/src/stereo_chemical_props.txt

echo 'absl-py==0.13.0
biopython==1.79
chex==0.0.7
dm-haiku==0.0.4
dm-tree==0.1.6
docker==5.0.0
immutabledict==2.0.0
jax==0.2.14
ml-collections==0.1.0
numpy==1.19.5
scipy==1.7.0
tensorflow-cpu==2.5.0' > /tmp/requirements.txt

# Install pip packages.
/opt/alphafoldenv/bin/pip install --upgrade --no-cache-dir pip \
  && /opt/alphafoldenv/bin/pip install --no-cache-dir -r /tmp/requirements.txt
/opt/alphafoldenv/bin/pip install --upgrade --no-cache-dir jax \
  jaxlib==0.1.69+cuda110 -f https://storage.googleapis.com/jax-releases/jax_releases.html

# Apply OpenMM patch.
wget -q -P /tmp \
  https://raw.githubusercontent.com/deepmind/alphafold/main/docker/openmm.patch
cd /opt/alphafoldenv/lib/python3.8/site-packages
patch -p0 < /tmp/openmm.patch

# Install alphafold
# cd /app/alphafold
# python setup.py install

# python -m ipykernel install --prefix=/opt/alphafoldenv --name=alphafold_env --display-name='Container (alphafoldenv)'



# We need to run `ldconfig` first to ensure GPUs are visible, due to some quirk
# with Debian. See https://github.com/NVIDIA/nvidia-docker/issues/1399 for
# details.
# ENTRYPOINT does not support easily running multiple commands, so instead we
# write a shell script to wrap them up.
# cd /app/alphafold
# echo '#!/bin/bash
# ldconfig
# python /app/alphafold/run_alphafold.py "$@"' > /app/run_alphafold.sh \
#   && chmod +x /app/run_alphafold.sh

%environment
export PATH=/opt/alphafoldenv/bin:$PATH
export PYTHONPATH=/opt/alphafoldnev/lib/python3.8/site-packages
export LC_ALL=C.UTF-8
export OPENMM_CPU_THREADS=8

%runscript
# exec /app/run_alphafold.sh "$@"
# exec /bin/bash -c "cd /app/alphafold && HOME=$(mktemp -d) jupyter notebook --notebook-dir=/ --NotebookApp.token='alphafold2' --port=${port} --ip=${node} --no-browser --allow-root"

%startscript
  exec /bin/bash ldconfig
